package com.devone.bot.plugin.command.commands;

import java.io.IOException;
import java.util.Arrays;

import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;

import com.devone.bot.core.Bot;
import com.devone.bot.core.BotManager;
import com.devone.bot.core.brain.memory.scene.BotSceneData;
import com.devone.bot.core.brain.memory.scene.BotSceneSaver;

import com.devone.bot.core.utils.BotConstants;

import com.devone.bot.core.utils.logger.BotLogger;

public class BotDumpCommand implements CommandExecutor {

    private final BotManager botManager;

    public BotDumpCommand(BotManager botManager) {
        this.botManager = botManager;
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {

        BotLogger.debug("üîß", true, "–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: " + Arrays.toString(args));

        if (args.length < 1) {
            sender.sendMessage("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /bot-dump <bot_id>");
            BotLogger.debug("‚ùå", true, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è /bot-dump");
            return false;
        }

        String botName = args[0];

        Bot bot = botManager.getBot(botName);

        if (bot == null) {
            sender.sendMessage("‚ùå –ë–æ—Ç —Å –∏–º–µ–Ω–µ–º " + botName + " –Ω–µ –Ω–∞–π–¥–µ–Ω.");

            BotLogger.debug("‚ùå", true, "–ë–æ—Ç —Å –∏–º–µ–Ω–µ–º " + botName + " –Ω–µ –Ω–∞–π–¥–µ–Ω.");

            return false;
        }

        BotSceneData sceneData = bot.getBrain().getMemory().getSceneData();

        String fileName = BotConstants.PLUGIN_TMP + bot.getId() + "_scene_data.json";

        try {
            BotSceneSaver.saveToJsonFile(fileName, sceneData);
            BotLogger.debug("üß†", true, " ‚úÖ –ë–æ—Ç —Å–∫–∏–Ω—É–ª –¥–∞–Ω–Ω—ã–µ –æ —Å—Ü–µ–Ω–µ –Ω–∞ –¥–∏—Å–∫" + fileName);
        } catch (IOException e) {
            BotLogger.debug("üß†", true, " ‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –¥–∏—Å–∫");
        }

        return true;
    }

}
