package com.devone.bot.core.logic.task.attack.regular;


import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.logic.task.BotTask;
import com.devone.bot.core.logic.task.attack.regular.params.BotRegularAttackParams;
import com.devone.bot.core.logic.task.attack.survival.params.BotSurvivalAttackTaskParams;
import com.devone.bot.core.logic.task.hand.attack.BotHandAttackTask;
import com.devone.bot.core.logic.task.hand.attack.params.BotHandAttackTaskParams;
import com.devone.bot.core.logic.task.params.BotTaskParams;
import com.devone.bot.core.logic.task.params.IBotTaskParams;
import com.devone.bot.utils.blocks.BotBlockData;
import com.devone.bot.utils.logger.BotLogger;

public class BotRegularAttackTask extends BotTask {

    private BotBlockData target;
    private double damage = 5.0;
    private boolean isLogged = true;

    public BotRegularAttackTask(Bot bot) {
        super(bot, "‚û¥");
        setObjective("Regular attack");
        this.isLogged = true;
    }

    @Override
    public BotRegularAttackTask configure(IBotTaskParams params) {
        super.configure((BotTaskParams) params);

        if (params instanceof BotRegularAttackParams) {

            this.target = ((BotSurvivalAttackTaskParams) params).getTarget();
            this.damage = ((BotSurvivalAttackTaskParams) params).getDamage();

        } else {
            BotLogger.info(isLogged, bot.getId() + " ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è BotSurvivalStrikeTask");
            this.stop();
        }
        return this;
    }

    @Override
    public void execute() {
        if (target == null || target.uuid == null) {
            BotLogger.info(isLogged, bot.getId() + " ‚ùå –¶–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç UUID");
            this.stop();
            return;
        }

        setObjective("Regular attack on target..." + target);

        // ‚úãüèª 2. –ê—Ç–∞–∫–∞
        BotHandAttackTask handTask = new BotHandAttackTask(bot).configure(new BotHandAttackTaskParams(target, this.damage));

        // üìã –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å
        bot.addTaskToQueue(handTask);

        BotLogger.info(isLogged, bot.getId() + "‚û¥ –û–±—ã—á–Ω–∞—è –∞—Ç—Ç–∞–∫–∞ –Ω–∞ —Ü–µ–ª—å: " + target + " —Å —É—Ä–æ–Ω–æ–º: " + damage);
        this.stop();
    }

    @Override
    public void stop() {
        this.isDone = true;
    }
}
