package com.devone.bot.core.logic.tasks.hunt;

import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.logic.tasks.BotTask;
import com.devone.bot.core.logic.tasks.hunt.config.BotHuntTaskConfig;
import com.devone.bot.core.logic.tasks.playerlinked.follow.BotFollowTargetTask;
import com.devone.bot.core.logic.tasks.sonar.BotSonar3DTask;
import com.devone.bot.utils.blocks.BotBlockData;
import com.devone.bot.utils.logger.BotLogger;

public class BotHuntMobsTask extends BotTask {

    private int scanRadius;
    private BotBlockData target = null;

    public BotHuntMobsTask(Bot bot) {
        super(bot, "üòà");
        this.config = new BotHuntTaskConfig(); // ‚úÖ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –ø–æ–ª–µ
        this.scanRadius = ((BotHuntTaskConfig) config).getScanRadius();
        this.isLogged = config.isLogged();
        setObjective("Look for hostile targets");
    }

    @Override
    public void execute() {
        BotLogger.info(isLogged(),"üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ—Ö–æ—Ç—ã –¥–ª—è –±–æ—Ç–∞ " + bot.getId());

        setObjective("Look for hostile targets");

        if (getSceneData() == null) {
            BotLogger.info(this.isLogged(),"üîç –ó–∞–ø—É—Å–∫–∞–µ–º 3D-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∂–∏–≤—ã—Ö —Ü–µ–ª–µ–π.");
            bot.addTaskToQueue(new BotSonar3DTask(bot, this, scanRadius, scanRadius));
            return;
        }

        if (target == null) {
            findTarget();
        }

        if (target != null) {

            bot.addTaskToQueue(new BotFollowTargetTask(bot, target));
            BotLogger.info(this.isLogged(),"üéØ –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ " + target.type);
            this.stop();
            return;
        }

        if (getElapsedTime() > 180000) {
            BotLogger.info(this.isLogged(),"üò¥ –£—Å—Ç–∞–ª, –æ—Ö–æ—Ç–∞ —É—Ç–æ–º–ª—è–µ—Ç.");
            this.stop();
            return;
        }

        setSceneData(null); // –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ç–∞–∫—Ç
    }

    private void findTarget() {
        BotLogger.info(this.isLogged(),"‚ùå –ù–∏ –æ–¥–Ω–æ–π –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ü–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
        this.stop();
    }

    @Override
    public void stop() {
        isDone = true;
    }

}
