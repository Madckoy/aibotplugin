package com.devone.bot.core.logic.task.hand;

import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.logic.task.BotTask;
import com.devone.bot.core.logic.task.hand.params.BotHandTaskParams;
import com.devone.bot.core.logic.task.IBotTaskParameterized;
import com.devone.bot.utils.blocks.BotBlockData;
import com.devone.bot.utils.logger.BotLogger;

public abstract class BotHandTask extends BotTask<BotHandTaskParams> {

    private BotBlockData target;

    public BotHandTask(Bot bot) {
        super(bot);
        setParams(new BotHandTaskParams()); // –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
    }

    @Override
    public IBotTaskParameterized<BotHandTaskParams> setParams(BotHandTaskParams params) {
        super.setParams(params);
        setIcon(params.getIcon());
        setObjective(params.getObjective());

        this.target = params.getTarget();

        if (target != null) {
            bot.getRuntimeStatus().setTargetLocation(target);
            BotLogger.info("‚úÖ", isLogging(), bot.getId() + " Target for BotHandTask is set: " + target);
        } else {
            BotLogger.info("‚ö†Ô∏è", isLogging(), bot.getId() + " Target is null in BotHandTask.");
        }

        return this;
    }

    @Override
    public void execute() {
        BotLogger.info("üî∂", isLogging(), bot.getId() + " Executing BotHandTask...");

        if (target == null) {
            BotLogger.info("‚ùå", isLogging(), bot.getId() + " BotHandTask: Target is null.");
            this.stop();
            return;
        }

        // –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ ‚Äî –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–µ
    }

    @Override
    public void stop() {
        bot.getRuntimeStatus().setTargetLocation(null);
        super.stop();
    }

    public BotBlockData getTarget() {
        return target;
    }
}
