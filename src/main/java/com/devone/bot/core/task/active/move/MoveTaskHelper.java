package com.devone.bot.core.task.active.move;

import com.devone.bot.core.Bot;
import com.devone.bot.core.utils.blocks.BotLocation;
import com.devone.bot.core.utils.world.BotWorldHelper;
import com.devone.bot.core.utils.logger.BotLogger;
import org.bukkit.Location;

/**
 * –£—Ç–∏–ª–∏—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–µ–º –±–æ—Ç–∞ (BotMoveTask).
 */
public class MoveTaskHelper {

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–≤–∏–∂–µ–Ω–∏—è NPC —á–µ—Ä–µ–∑ Citizens, —Å –Ω—É–∂–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é –∏ —Å–∫–æ—Ä–æ—Å—Ç—å—é.
     */
    public static void setTarget(Bot bot, BotLocation target, float speed, boolean log) {
        if (bot == null || target == null) return;

        bot.getNavigator().setTarget(target); // –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞
        bot.getNPCNavigator().getLocalParameters()
            .range(0.5f) // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–æ —Ü–µ–ª–∏
            .speedModifier(speed);

        Location targetLoc = BotWorldHelper.getWorldLocation(target);
        bot.getNPCNavigator().setTarget(targetLoc);

        if (log) {
            BotLogger.debug("üèÅ", true, bot.getId() + " ‚ñ∂ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–ª—å –¥–≤–∏–∂–µ–Ω–∏—è: " + target);
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ü–µ–ª–µ–≤–æ–π —Ç–æ—á–∫–µ.
     *
     * @param bot       –±–æ—Ç
     * @param target    –æ–∂–∏–¥–∞–µ–º–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
     * @param yTolerance –¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –ø–æ Y (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0 –∏–ª–∏ 1)
     * @return true, –µ—Å–ª–∏ –±–æ—Ç —Å—Ç–æ–∏—Ç –≤ –Ω—É–∂–Ω–æ–π —Ç–æ—á–∫–µ (—Å —É—á—ë—Ç–æ–º Y-–ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏)
     */
    public static boolean isAtTarget(Bot bot, BotLocation target, double yTolerance) {
        if (bot == null || target == null) return false;

        Location loc = bot.getNPC().getEntity().getLocation();
        BotLocation current = new BotLocation(loc.getBlockX(), loc.getBlockY(), loc.getBlockZ());

        boolean match = current.getX() == target.getX()
                && current.getZ() == target.getZ()
                && Math.abs(current.getY() - target.getY()) <= yTolerance;

        BotLogger.debug("üìç", true, bot.getId() + " –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏: —Ç–µ–∫—É—â–∞—è = " + current
                + " | —Ü–µ–ª—å = " + target + " | —Å–æ–≤–ø–∞–¥–∞–µ—Ç: " + match);

        return match;
    }
}
