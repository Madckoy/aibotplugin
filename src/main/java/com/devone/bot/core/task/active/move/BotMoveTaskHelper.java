package com.devone.bot.core.task.active.move;

import com.devone.bot.core.Bot;
import com.devone.bot.core.utils.BotUtils;
import com.devone.bot.core.utils.blocks.BotPosition;
import com.devone.bot.core.utils.logger.BotLogger;
import com.devone.bot.core.utils.world.BotWorldHelper;
import org.bukkit.Location;

/**
 * –£—Ç–∏–ª–∏—Ç–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–µ–º –±–æ—Ç–∞ (BotMoveTask).
 */
public class BotMoveTaskHelper {

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–≤–∏–∂–µ–Ω–∏—è –¥–ª—è NPC.
     *
     * @param bot    –±–æ—Ç
     * @param target —Ü–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
     * @param speed  –º–Ω–æ–∂–∏—Ç–µ–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏
     * @param log    –≤–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
     */
    public static void setTarget(Bot bot, BotPosition target, float speed, boolean log) {
        if (target == null) {
            BotLogger.debug( BotUtils.getActiveTaskIcon(bot), true, bot.getId() + " üèÅ –ù–µ —Å–º–æ–≥–ª–∏ –Ω–∞—á–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ.");
            return;
        }

        Location loc = BotWorldHelper.botPositionToWorldLocation(target);

        bot.getNPCNavigator().cancelNavigation();
        bot.getNPCNavigator().setPaused(false);
        bot.getNPCNavigator().getDefaultParameters().speedModifier(speed);
        bot.getNPCNavigator().setTarget(loc);

        if (log) {
            BotLogger.debug(BotUtils.getActiveTaskIcon(bot), true, bot.getId() + " ‚ñ∂ –î–≤–∏–≥–∞–µ–º—Å—è –∫: " + target);
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –±–æ—Ç –≤ –Ω—É–∂–Ω–æ–π —Ç–æ—á–∫–µ.
     *
     * @param bot        –±–æ—Ç
     * @param target     –æ–∂–∏–¥–∞–µ–º–∞—è –ø–æ–∑–∏—Ü–∏—è
     * @param yTolerance –¥–æ–ø—É—Å—Ç–∏–º–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –ø–æ Y
     * @return true, –µ—Å–ª–∏ –±–æ—Ç –≤ –Ω—É–∂–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
     */
    public static boolean isAtTarget(Bot bot, BotPosition tgt, double yTolerance) {
        if (bot == null || tgt == null) return false;

        Location botLoc = bot.getNPC().getEntity().getLocation();
        Location poiLoc = BotWorldHelper.botPositionToWorldLocation(tgt);

        boolean match = botLoc.getX() == poiLoc.getX()
                && botLoc.getZ() == poiLoc.getZ()
                && Math.abs(botLoc.getY() - poiLoc.getY()) <= yTolerance;

        BotLogger.debug(BotUtils.getActiveTaskIcon(bot), true, bot.getId() + " üìç –ü–æ–∑–∏—Ü–∏—è: " + botLoc + " | –¶–µ–ª—å: " + poiLoc + " | –°–æ–≤–ø–∞–¥–∞–µ—Ç: " + match);

        return match;
    }
}
