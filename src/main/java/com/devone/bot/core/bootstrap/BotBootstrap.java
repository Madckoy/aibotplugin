package com.devone.bot.core.bootstrap;

import org.bukkit.Bukkit;

import com.devone.bot.AIBotPlugin;
import com.devone.bot.core.Bot;
import com.devone.bot.core.task.passive.BotTaskManager;
import com.devone.bot.core.task.active.brain.BotBrainTask;
import com.devone.bot.core.task.active.sonar.BotSonar3DTask;
import com.devone.bot.core.utils.logger.BotLogger;
import com.devone.bot.core.utils.server.ServerUtils;

public class BotBootstrap {
    private final Bot bot;
    private final BotTaskManager taskManager;

    private boolean brainStarted = false; // ‚úÖ –§–ª–∞–≥, —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å Brain Task –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑

    public BotBootstrap(Bot bot) {
        this.bot = bot;
        this.taskManager = new BotTaskManager(bot);

        startLifeCycle();
    }

    private void startLifeCycle() {
        BotLogger.debug("ü§ñ", true, "üí• –ó–∞–ø—É—Å–∫–∞–µ–º Bootstrap –¥–ª—è –±–æ—Ç–∞ " + bot.getId());
    
        // –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è (—á–∞—Å—Ç–æ)
        Bukkit.getScheduler().runTaskTimer(AIBotPlugin.getInstance(), () -> {
            if (ServerUtils.isServerStopping()) return;
    
            BotSonar3DTask sonar = new BotSonar3DTask(bot);
            sonar.execute();    
    
            BotLogger.debug(bot.getActiveTask().getIcon(), true, bot.getId() + " üì° Sonar Scan");
    
        }, 0L, 10L); // –∫–∞–∂–¥—ã–µ 10 —Ç–∏–∫–æ–≤ = 0.5 —Å–µ–∫
    
        // –û—Ç–¥–µ–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á (—Ä–µ–¥–∫–æ)
        Bukkit.getScheduler().runTaskTimer(AIBotPlugin.getInstance(), () -> {
            if (ServerUtils.isServerStopping()) return;
    
            update();
    
        }, 0L, 20L); // –∫–∞–∂–¥—ã–µ 40 —Ç–∏–∫–æ–≤ = 2 —Å–µ–∫
    }
    

    private void update() {
        if (!taskManager.isEmpty()) {
            brainStarted = false;
            taskManager.updateActiveTask();
        } else {
            if (!brainStarted) {
                BotLogger.debug("üí•", true, bot.getId() + " üò¥ –ë–æ—Ç –±–µ–∑ –∑–∞–¥–∞—á. –î–æ–±–∞–≤–ª—è–µ–º BotBrainTask.");
                BotTaskManager.push(bot, new BotBrainTask(bot));
                brainStarted = true;
            }
        }
    }
    public BotTaskManager getTaskManager() {
        return taskManager;
    }
}
