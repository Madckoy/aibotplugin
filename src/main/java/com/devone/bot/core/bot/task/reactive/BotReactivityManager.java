
package com.devone.bot.core.bot.task.reactive;

import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.bot.task.reactive.reaction.LowHealthReaction;
import com.devone.bot.core.bot.task.reactive.reaction.NearbyHostileReaction;
import com.devone.bot.core.bot.task.reactive.reaction.NearbyPlayerReaction;
import com.devone.bot.core.utils.logger.BotLogger;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—Ç–∞.
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é.
 */
public class BotReactivityManager {

    private static final List<IBotReactionStrategy> strategies = new ArrayList<>();

    static {
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        strategies.add(new NearbyHostileReaction());
        strategies.add(new LowHealthReaction());
        strategies.add(new NearbyPlayerReaction());
        // —Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        BotLogger.debug("üß†", true, "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏: " + strategies.size());
    }

    public static Optional<Runnable> checkReactions(Bot bot) {
        BotLogger.debug("‚öôÔ∏è", true, bot.getId() + " üí´ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ä–µ–∞–∫—Ü–∏–π...");
        for (IBotReactionStrategy strategy : strategies) {
            BotLogger.debug("üîç", true, bot.getId() + " üí´ –ü—Ä–æ–±—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é: " + strategy.getName());
            Optional<Runnable> reaction = strategy.check(bot);
            if (reaction.isPresent()) {
                BotLogger.debug(bot.getActiveTask().getIcon(), 
                true, bot.getId() + " üí´ –†–µ–∞–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: " + strategy.getName());
                return reaction;
            }
        }
        return Optional.empty();
    }

    public static void registerStrategy(IBotReactionStrategy strategy) {
        strategies.add(strategy);
    }
}
