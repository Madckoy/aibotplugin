package com.devone.bot.core.bot.task.reactive.reaction;

import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.bot.task.passive.BotTask;
import com.devone.bot.core.bot.task.reactive.BotReactiveUtils;
import com.devone.bot.core.bot.task.reactive.IBotReactionStrategy;
import com.devone.bot.core.bot.task.reactive.sequence.BotReactiveSequenceTask;
import com.devone.bot.core.utils.BotUtils;
import com.devone.bot.core.utils.logger.BotLogger;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

/**
 * üìç –®–∞–±–ª–æ–Ω —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.
 * –ó–∞–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É –≤–Ω—É—Ç—Ä–∏ check().
 */
public class BotReactiveTemplateReaction implements IBotReactionStrategy {

    @Override
    public Optional<Runnable> check(Bot bot) {

        BotLogger.debug("ü§ñ", true, bot.getId() + " üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏: " + getName());

        // üí° –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è (–ø—Ä–∏–º–µ—Ä: –∑–¥–æ—Ä–æ–≤—å–µ, –º–æ–±—ã, –∏–≥—Ä–æ–∫–∏ —Ä—è–¥–æ–º –∏ —Ç.–ø.)
        boolean condition = false; // –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ—é –ª–æ–≥–∏–∫—É

        if (!condition) return Optional.empty();

        // üîÅ –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É–∂–µ —Ä–µ–∞–∫—Ü–∏—è
        if (BotReactiveUtils.isAlreadyReacting(bot)) {
            BotLogger.debug("ü§ñ", true, bot.getId() + " üîÅ –£–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–µ–∞–∫—Ü–∏—è ‚Äî –≤—ã—Ö–æ–¥–∏–º");
            return BotReactiveUtils.avoidOverReaction(bot);
        }

        // ‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ–∞–∫—Ü–∏–∏
        BotReactiveUtils.activateReaction(bot);

        return Optional.of(() -> {
            BotLogger.debug("ü§ñ", true, bot.getId() + " üöÄ –ó–∞–ø—É—Å–∫ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π —Ü–µ–ø–æ—á–∫–∏: " + getName());

            List<BotTask<?>> tasks = new ArrayList<>();

            // TODO: –î–æ–±–∞–≤—å —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏
            // tasks.add(new YourTask1(...));
            // tasks.add(new YourTask2(...));

            BotReactiveSequenceTask sequence = new BotReactiveSequenceTask(bot, tasks);
            BotUtils.pushTask(bot, sequence);
        });
    }

    @Override
    public String getName() {
        return "üß™ –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–∏ (–∑–∞–º–µ–Ω–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ)";
    }
}
