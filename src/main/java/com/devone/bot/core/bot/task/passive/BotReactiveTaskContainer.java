package com.devone.bot.core.bot.task.passive;

import java.util.ArrayList;
import java.util.List;

import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.bot.task.passive.params.BotTaskParams;
import com.devone.bot.core.utils.logger.BotLogger;

public abstract class BotReactiveTaskContainer<T extends BotTaskParams> extends BotTaskAutoParams<T> {

    protected final List<BotTask<?>> subtasks = new ArrayList<>();
    protected boolean started = false;

    public BotReactiveTaskContainer(Bot bot, Class<T> paramClass) {
        super(bot, null, paramClass);
        setReactive(true); // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        setIcon("üì¶");
        setObjective("Reactive container for tasks");
    }

    @Override
    public void execute() {
        if (started)
            return;

        BotLogger.debug(getIcon(), true,
                bot.getId() + " ‚ö° –ó–∞–ø—É—â–µ–Ω —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: " + this.getClass().getSimpleName());
        started = true;

        enqueue(bot); // üëà –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–¥–∑–∞–¥–∞—á (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å)

        for (BotTask<?> task : subtasks) {
            BotLogger.debug(getIcon(), true,
                    bot.getId() + " ‚ûï –ó–∞–ø—É—Å–∫ —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–∑–∞–¥–∞—á–∏: " + task.getClass().getSimpleName());
            task.setReactive(true);
            bot.getTaskManager().pushTask(task);
        }

        BotLogger.debug(getIcon(), true,
                bot.getId() + " ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ–±—è: " + this.getClass().getSimpleName());
        stop();
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∑–∞–¥–∞—á–∏ –≤—Ä—É—á–Ω—É—é
     */
    public BotReactiveTaskContainer<T> add(BotTask<?> task) {
        if (started) {
            BotLogger.debug(getIcon(), true, bot.getId() + " ‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: "
                    + task.getClass().getSimpleName());
            return this;
        }
        subtasks.add(task);
        return this;
    }

    /**
     * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∑–∞–¥–∞—á–∏
     */
    protected void enqueue(Bot bot) {
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
    }

    @Override
    public void stop() {
        super.stop();
        BotLogger.debug(getIcon(), true, bot.getId() + " üîö –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–Ω—è—Ç: " + this.getClass().getSimpleName());
    }
}
