package com.devone.bot.core.bot.task.passive;

import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.bot.task.active.brain.BotBrainTask;
import com.devone.bot.core.bot.task.passive.params.BotTaskParams;
import com.devone.bot.core.utils.logger.BotLogger;

public abstract class BotReactiveTaskContainer<T extends BotTaskParams> extends BotTaskAutoParams<T> {

    private boolean started = false;

    public BotReactiveTaskContainer(Bot bot, Class<T> paramClass) {
        super(bot, null, paramClass);
        setReactive(true); // –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    }

    @Override
    public void execute() {
        if (!started) {
            BotLogger.debug(getIcon(), true, bot.getId() + " ‚ö° –ó–∞–ø—É—â–µ–Ω —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: " + this.getClass().getSimpleName());

            BotTask<?> active = bot.getActiveTask();

            // üí° –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ù–ï –º–æ–∑–≥, —É–±–∏—Ä–∞–µ–º –µ—ë
            if (active != null && !(active instanceof BotBrainTask)) {
                BotLogger.debug(icon, true, bot.getId() + " üîÅ –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–¥–∞—á—É: " + active.getClass().getSimpleName());
                active.stop();
            }
   
            enqueue(bot); // üëà –†–µ–∞–ª—å–Ω–æ –≤–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–¥–∞—á–∏
            started = true;

            BotLogger.debug(getIcon(), true, bot.getId() + " ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ–±—è: " + this.getClass().getSimpleName());
            stop();
        }
    }

    @Override
    public void stop() {
        super.stop(); // done = true

        BotLogger.debug(getIcon(), true, bot.getId() + " üîö –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–Ω—è—Ç: " + this.getClass().getSimpleName());

        // —Ç—É—Ç –º–æ–∂–µ—à—å –ª–æ–≥–≥–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–µ–∫, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        bot.reactiveTaskStop(this);
    }

    protected abstract void enqueue(Bot bot);
}
