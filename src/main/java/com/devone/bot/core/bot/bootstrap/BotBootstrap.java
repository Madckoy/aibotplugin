package com.devone.bot.core.bot.bootstrap;

import org.bukkit.Bukkit;

import com.devone.bot.AIBotPlugin;
import com.devone.bot.core.bot.Bot;
import com.devone.bot.core.bot.task.active.brain.BotBrainTask;
import com.devone.bot.core.bot.task.passive.BotTaskManager;
import com.devone.bot.core.utils.BotUtils;
import com.devone.bot.core.utils.logger.BotLogger;
import com.devone.bot.core.utils.server.ServerUtils;

public class BotBootstrap {
    private final Bot bot;
    private final BotTaskManager taskStackManager;

    private boolean brainStarted = false; // ‚úÖ –§–ª–∞–≥, —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å Brain Task –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑

    public BotBootstrap(Bot bot) {
        this.bot = bot;
        this.taskStackManager = new BotTaskManager(bot);

        startLifeCycle();
    }

    private void startLifeCycle() {
        BotLogger.debug("üí•", true, " üí• –ó–∞–ø—É—Å–∫–∞–µ–º Bootstrap –¥–ª—è –±–æ—Ç–∞ " + bot.getId());

        Bukkit.getScheduler().runTaskTimer(AIBotPlugin.getInstance(), () -> {

            update();

        }, 0L, 2L); // 2 —Ç–∏–∫–∞ = 0.1 —Å–µ–∫—É–Ω–¥—ã (–≤ 10 —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –±—ã–ª–æ!)
    }

    public void update() {
        if (ServerUtils.isServerStopping()) return;

        if (!taskStackManager.isEmpty()) {
        
            brainStarted = false; // ‚úÖ –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
        
            taskStackManager.updateActiveTask();
        
        } else {
            if (!brainStarted) {
                BotLogger.debug("üí•", true, " üò¥ –ë–æ—Ç " + bot.getId() + " –ë–µ–∑ –∑–∞–¥–∞—á. –î–æ–±–∞–≤–ª—è–µ–º BotBrainTask.");
                
                BotUtils.pushTask(bot, new BotBrainTask(bot));
                
                brainStarted = true; // ‚úÖ –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥, —á—Ç–æ IdleActivity —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞
            }
        }
    }

    public BotTaskManager getTaskStackManager() {
        return taskStackManager;
    }
}
