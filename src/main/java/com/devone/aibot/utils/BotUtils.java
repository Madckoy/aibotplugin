package com.devone.aibot.utils;

import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;

import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;

import java.util.regex.Matcher;
import java.util.regex.Pattern;




public class BotUtils {

    public static void sendMessageToPlayer(Player to, String from, String message) {
        Component chatMessage;

        if (from == null) {
            // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã
            chatMessage = Component.text("[System] ", NamedTextColor.YELLOW)
                    .append(Component.text(message, NamedTextColor.WHITE));
        } else if (from.contains("Bot")) { 
            // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ (–µ—Å–ª–∏ –≤ –∏–º–µ–Ω–∏ –µ—Å—Ç—å "Bot")
            chatMessage = Component.text("[", NamedTextColor.GRAY)
                    .append(Component.text(from, NamedTextColor.AQUA)) // –ò–º—è –±–æ—Ç–∞ ‚Äì –≥–æ–ª—É–±—ã–º
                    .append(Component.text("] ", NamedTextColor.GRAY))
                    .append(Component.text(message, NamedTextColor.WHITE));
        } else {
            // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            chatMessage = Component.text(from + ": ", NamedTextColor.GREEN)
                    .append(Component.text(message, NamedTextColor.WHITE));
        }

        to.sendMessage(chatMessage);
    }

    public static String getBlockName(Block bl) {

        String text = bl.toString();

        String result = "";
        // Regular expression to capture the value of type
        String pattern = "type=([A-Za-z0-9_]+)";

        // Create a Pattern object
        Pattern r = Pattern.compile(pattern);

        // Create a matcher object
        Matcher m = r.matcher(text);

        // Check if the pattern is found
        if (m.find()) {
            result = m.group(1);
        }

        return result; 
    }

    public static void playBlockBreakEffect(Location location) {
        if (location == null || location.getWorld() == null) return;
    
        Material blockType = location.getBlock().getType();
    
        // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–ª–æ–∫ –Ω–µ AIR (–∏–Ω–∞—á–µ —ç—Ñ—Ñ–µ–∫—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç)
        if (blockType == Material.AIR) {
            BotLogger.trace("‚ö†Ô∏è –≠—Ñ—Ñ–µ–∫—Ç —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ë–Ω: –±–ª–æ–∫ —É–∂–µ AIR " + BotStringUtils.formatLocation(location));
            return;
        }
    
        location.getWorld().spawnParticle(
            org.bukkit.Particle.BLOCK_CRACK,
            location.clone().add(0.5, 0.5, 0.5), // –¶–µ–Ω—Ç—Ä –±–ª–æ–∫–∞
            20, // –ö–æ–ª-–≤–æ —á–∞—Å—Ç–∏—Ü
            0.25, 0.25, 0.25, // –†–∞–∑–±—Ä–æ—Å
            location.getBlock().getBlockData() // –¢–∏–ø –±–ª–æ–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
        );
    
        BotLogger.trace("üéá –≠—Ñ—Ñ–µ–∫—Ç —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –Ω–∞ " + BotStringUtils.formatLocation(location));
    }

    public static boolean requiresTool(Material blockType) {
        return switch (blockType) {
            case IRON_ORE, GOLD_ORE, DIAMOND_ORE, DEEPSLATE, OBSIDIAN -> true; // ‚ùó –¢–æ–ª—å–∫–æ —ç—Ç–∏ –±–ª–æ–∫–∏ —Ç—Ä–µ–±—É—é—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
            default -> false; // –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –º–æ–∂–Ω–æ –ª–æ–º–∞—Ç—å —Ä—É–∫–∞–º–∏
        };
    }
}