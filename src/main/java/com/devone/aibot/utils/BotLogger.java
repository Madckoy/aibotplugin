package com.devone.aibot.utils;

import org.bukkit.configuration.file.FileConfiguration;
import com.devone.aibot.AIBotPlugin;
import java.io.IOException;
import java.util.logging.*;

public class BotLogger {
    private static final Logger logger = Logger.getLogger("AIBotPlugin");
    private static Level logLevel = Level.INFO;
    private static boolean loggingEnabled = true;
    private static FileHandler fileHandler; // üìÇ –ù–æ–≤—ã–π FileHandler
    private static final String LOG_FILE_PATH = "plugins/AIBotPlugin/logs/console.log";

    static {
        try {
            // üõ† –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
            fileHandler = new FileHandler(LOG_FILE_PATH, 10 * 1024 * 1024, 5, true); // 10MB, 5 —Ñ–∞–π–ª–æ–≤
            fileHandler.setFormatter(new SimpleFormatter()); 
            fileHandler.setLevel(Level.ALL);
            logger.addHandler(fileHandler);

            logger.setUseParentHandlers(false); // üö´ –û—Ç–∫–ª—é—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (Console)
        } catch (IOException e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–≥–µ—Ä–∞: " + e.getMessage());
        }
    }

    public static void init(AIBotPlugin plugin) {
        FileConfiguration config = plugin.getConfig();
        loggingEnabled = config.getBoolean("logging.enable", true);

        if (!loggingEnabled) {
            logLevel = Level.OFF;
            logger.setLevel(Level.OFF);
            fileHandler.setLevel(Level.OFF);
            return;
        }

        String levelStr = config.getString("logging.level", "SEVERE").toUpperCase();

        try {
            logLevel = Level.parse(levelStr);
            logger.setLevel(logLevel); 
            fileHandler.setLevel(logLevel);
            info("üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: " + logLevel.getName());
        } catch (IllegalArgumentException e) {
            logLevel = Level.SEVERE;
            logger.setLevel(Level.SEVERE);
            fileHandler.setLevel(Level.SEVERE);
            error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ config.yml, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SEVERE.");
        }
    }

    public static void debug(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.FINE.intValue()) {
            logger.fine("üü° " + message);
        }
    }

    public static void info(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.INFO.intValue()) {
            logger.info("‚ÑπÔ∏è " + message);
        }
    }

    public static void warn(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.WARNING.intValue()) {
            logger.warning("‚ö†Ô∏è " + message);
        }
    }

    public static void error(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.SEVERE.intValue()) {
            logger.severe("üö® " + message);
        }
    }

    public static void trace(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.FINER.intValue()) {
            logger.finer("üìÉ " + message);
        }
    }
}
