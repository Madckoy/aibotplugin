package com.devone.aibot.utils;

import org.bukkit.configuration.file.FileConfiguration;
import com.devone.aibot.AIBotPlugin;
import java.util.logging.ConsoleHandler;
import java.util.logging.Level;
import java.util.logging.Logger;

public class BotLogger {
    private static final Logger logger = Logger.getLogger("AIBotPlugin"); // üÜï –°–æ–∑–¥–∞—ë–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä
    private static Level logLevel = Level.INFO;
    private static boolean loggingEnabled = true;
    private static ConsoleHandler consoleHandler = new ConsoleHandler();

    static {
        logger.setUseParentHandlers(false); // üõë –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ PaperMC –ª–æ–≥–≥–µ—Ä–∞
        consoleHandler.setLevel(Level.ALL);
        logger.addHandler(consoleHandler);
        logger.setLevel(logLevel);
    }

    public static void init(AIBotPlugin plugin) {
        FileConfiguration config = plugin.getConfig();
        loggingEnabled = config.getBoolean("logging.enable", true);

        if (!loggingEnabled) {
            logLevel = Level.OFF;
            logger.setLevel(Level.OFF);
            consoleHandler.setLevel(Level.OFF);
            return;
        }

        String levelStr = config.getString("logging.level", "SEVERE").toUpperCase();

        try {
            logLevel = Level.parse(levelStr);
            logger.setLevel(logLevel); // üÜï –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            consoleHandler.setLevel(logLevel); // üÜï –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ ConsoleHandler —Ç–æ–∂–µ –º–µ–Ω—è–µ—Ç —É—Ä–æ–≤–µ–Ω—å
            info("üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: " + logLevel.getName());
        } catch (IllegalArgumentException e) {
            logLevel = Level.SEVERE;
            logger.setLevel(Level.SEVERE);
            consoleHandler.setLevel(Level.SEVERE);
            error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ config.yml, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SEVERE.");
        }
    }

    public static void debug(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.FINE.intValue()) {
            logger.fine("üü° " + message);
        }
    }

    public static void info(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.INFO.intValue()) {
            logger.info("‚ÑπÔ∏è " + message);
        }
    }

    public static void warn(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.WARNING.intValue()) {
            logger.warning("‚ö†Ô∏è " + message);
        }
    }

    public static void error(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.SEVERE.intValue()) {
            logger.severe("üö® " + message);
        }
    }

    public static void trace(String message) {
        if (loggingEnabled && logLevel.intValue() <= Level.FINER.intValue()) {
            logger.finer("üìÉ " + message);
        }
    }
}
