package com.devone.aibot.core.logic.tasks;

import com.devone.aibot.utils.*;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.scheduler.BukkitTask;
import com.devone.aibot.AIBotPlugin;
import com.devone.aibot.core.Bot;

public class BotTaskMove extends BotTask {

    private BukkitTask taskHandle; // üü¢ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –µ–≥–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å

    public BotTaskMove(Bot bot) {
        super(bot, "üèÉ‚Äç‚ôÇÔ∏è");
    }

    @Override
    public void configure(Object... params) {
        super.configure(params);

        if (params.length == 1 && params[0] instanceof Location) {

            this.targetLocation = (Location) params[0];

        } else {

            BotLogger.error(bot.getId() + " ‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è `BotTaskMove`!");
            isDone = true;
        }
    }

    @Override
    public void executeTask() {

        if (taskHandle != null && !taskHandle.isCancelled()) {
            BotLogger.debug(bot.getId() + " ‚è≥ –¢–∞–π–º–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –∂–¥—É... [ID: " + uuid + "]");
        } else {

            if (isDone || isPaused || targetLocation == null) { // ‚úÖ –§–∏–∫—Å —É—Å–ª–æ–≤–∏—è
                return;
            }

        }

        // üü¢ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ `taskHandle`
        taskHandle = Bukkit.getScheduler().runTaskTimer(AIBotPlugin.getInstance(), () -> {
            if (isDone) {
                if (taskHandle != null) {
                    taskHandle.cancel(); // ‚úÖ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
                    BotLogger.debug(bot.getId() + " üõë Move task –∑–∞–≤–µ—Ä—à—ë–Ω, —Ç–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. [ID: " + uuid + "]");
                }
                return;
            }

            // 1. –ï—Å–ª–∏ –±–æ—Ç —É–∂–µ –¥–≤–∏–∂–µ—Ç—Å—è, –∂–¥—ë–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞
            if (bot.getNPCNavigator().isNavigating()) {
                return;
            }

            // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥ –ª–∏ –±–æ—Ç —Ü–µ–ª–∏
            if (BotNavigationUtils.hasReachedTarget(bot, targetLocation, 10)) {
                bot.resetTargetLocation();
                isDone = true; // ‚úÖ –¢–µ–ø–µ—Ä—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∑–∞–¥–∞—á—É!
                BotLogger.debug(bot.getId() + " üéØ –î–æ—Å—Ç–∏–≥ —Ü–µ–ª–∏! –†–µ–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: " + bot.getNPCEntity().getLocation() + " [ID: " + uuid + "]");
                return;
            } else {
                // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç —Ç—É–¥–∞ –ø—Ä–æ–π—Ç–∏
                if (!bot.getNPCNavigator().canNavigateTo(targetLocation)) {
                    BotLogger.trace(bot.getId() + " ‚ùå –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –ø—É—Ç—å, Stopping here..." + " [ID: " + uuid + "]");
                    isDone = true;
                    return;
                } else {
                   
                    if(bot.getNPCEntity() ==null) {

                        BotLogger.trace(bot.getId() + " üëª –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å—É—â—å–Ω–æ—Å—Ç—å—é! –í –∑–∞–¥–∞—á–µ ID: " + uuid + "]");
                    
                        taskHandle.cancel(); // ‚úÖ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
                        isDone = true; // –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º  –∑–∞–¥–∞—á—É

                    } else {

                        BotLogger.trace(bot.getId() + " üö∂ –î–≤–∏–≥–∞—é—Å—å –≤ " + BotStringUtils.formatLocation(targetLocation) + " [ID: " + uuid + "]");

                        bot.getNPCCurrentLocation().setDirection(targetLocation.toVector().subtract(bot.getNPCCurrentLocation().toVector()));

                        bot.getNPCNavigator().setTarget(targetLocation);
                        
                    }
            }
        }

        }, 0L, 100L); // ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 20 —Ç–∏–∫–æ–≤ (1 —Å–µ–∫—É–Ω–¥–∞)
    }
}
