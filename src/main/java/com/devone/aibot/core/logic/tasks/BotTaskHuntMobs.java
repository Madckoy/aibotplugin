package com.devone.aibot.core.logic.tasks;

import com.devone.aibot.core.Bot;
import com.devone.aibot.core.logic.tasks.configs.BotTaskExploreConfig;
import com.devone.aibot.core.logic.tasks.configs.BotTaskHuntConfig;
import com.devone.aibot.utils.BotLogger;
import com.devone.aibot.utils.EntityUtils;
import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Player;

import java.util.List;

public class BotTaskHuntMobs extends BotTask {

    private BotTaskHuntConfig config; // üëà –•—Ä–∞–Ω–∏–º —Å –Ω—É–∂–Ω—ã–º —Ç–∏–ø–æ–º

    private int scanRadius;
    private boolean shouldFollowPlayer = false;

    private LivingEntity targetMob = null;

    public BotTaskHuntMobs(Bot bot) {
        super(bot, "üëÅÔ∏è");
        
        this.config = new BotTaskHuntConfig();
        scanRadius = config.getScanRadius(); // ‚úÖ –¢–µ–ø–µ—Ä—å –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç
        geoMap = null;
        bioEntities = null;
    }

    @Override
    public void executeTask() {
        BotLogger.trace("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ—Ö–æ—Ç—ã –¥–ª—è –±–æ—Ç–∞ " + bot.getId());
        setObjective("Looking for hostile targets");

        if (getBioEntities() == null) {
            BotLogger.trace("üîç –ó–∞–ø—É—Å–∫–∞–µ–º 3D-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∂–∏–≤—ã—Ö —Ü–µ–ª–µ–π.");
            bot.addTaskToQueue(new BotTaskSonar3D(bot, this, scanRadius, 4));
            isDone = false;
            return;
        }

        if (targetMob == null || targetMob.isDead()) {
            findTarget();
        }

        if (targetMob != null) {
            bot.addTaskToQueue(new BotTaskFollowTarget(bot, targetMob));
            BotLogger.debug("üéØ –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ " + targetMob.getType());
            isDone = true;
            return;
        }

        if (getElapsedTime() > 180000) {
            BotLogger.debug("üò¥ –£—Å—Ç–∞–ª, –æ—Ö–æ—Ç–∞ —É—Ç–æ–º–ª—è–µ—Ç.");
            isDone = true;
            return;
        }

        setBioEntities(null);
    }

    private void findTarget() {
        List<LivingEntity> nearbyEntities = getBioEntities();

        for (LivingEntity entity : nearbyEntities) {
            if (EntityUtils.isHostileMob(entity)) {
                targetMob = entity;
                BotLogger.debug("üéØ –ù–∞–π–¥–µ–Ω–∞ –≤—Ä–∞–∂–¥–µ–±–Ω–∞—è —Ü–µ–ª—å: " + targetMob.getType());
                return;
            }
        }

        if (shouldFollowPlayer) {
            for (LivingEntity entity : nearbyEntities) {
                if (entity instanceof Player) {
                    targetMob = entity;
                    BotLogger.debug("üéØ –ù–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫! –ù–∞—á–∏–Ω–∞–µ–º —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ.");
                    return;
                }
            }
        }

        BotLogger.debug("‚ùå –ù–∏ –æ–¥–Ω–æ–π –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ü–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
        isDone = true;
    }
}
