package com.devone.aibot.core.logic.tasks;

import com.devone.aibot.core.Bot;
import com.devone.aibot.core.logic.tasks.configs.BotTaskFollowConfig;
import com.devone.aibot.utils.BotLogger;
import org.bukkit.entity.*;

import java.util.List;

public class BotTaskHuntMobs extends BotTask {

    private LivingEntity targetMob = null;
    private static final BotTaskFollowConfig config = new BotTaskFollowConfig();
    private final int searchRadius = (int) config.getFollowDistance() * 10; // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –º–æ–±–æ–≤
    private final boolean shouldFollowPlayer = true; // –ú–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Ñ–∏–≥

    public BotTaskHuntMobs(Bot bot) {
        super(bot, "‚öîÔ∏è");
    }

    @Override
    public void executeTask() {
        BotLogger.trace("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ—Ö–æ—Ç—ã –¥–ª—è –±–æ—Ç–∞ " + bot.getId());

        // üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏
        if (getEnvMap() == null) {
            BotLogger.trace("üîç –ó–∞–ø—É—Å–∫–∞–µ–º 3D-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã.");
            bot.addTaskToQueue(new BotTaskSonar3D(bot, this, searchRadius, 4));
            isDone = false;
            return;
        }

        if (targetMob == null || targetMob.isDead()) {
            findTarget();
        }

        if (targetMob != null) {
            bot.addTaskToQueue(new BotTaskFollowTarget(bot, targetMob));
            BotLogger.debug("üéØ –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ " + targetMob.getType());
            isDone = true;
        } else {
            BotLogger.debug("‚ùå –¶–µ–ª–µ–π –Ω–µ—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞—Ç—Ä—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ.");
            bot.addTaskToQueue(new BotTaskExplore(bot));
            isDone = true;
        }
    }

    private void findTarget() {
        List<Entity> nearbyEntities = bot.getNPCEntity().getNearbyEntities(searchRadius, searchRadius, searchRadius);

        // –ò—â–µ–º –º–æ–±–æ–≤
        for (Entity entity : nearbyEntities) {
            if (entity instanceof Monster) {
                targetMob = (LivingEntity) entity;
                BotLogger.debug("üéØ –ù–∞–π–¥–µ–Ω–∞ —Ü–µ–ª—å: " + targetMob.getType());
                return;
            }
        }

        // –ï—Å–ª–∏ –º–æ–±–æ–≤ –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ –∏–≥—Ä–æ–∫–æ–º (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
        if (shouldFollowPlayer) {
            for (Entity entity : nearbyEntities) {
                if (entity instanceof Player) {
                    targetMob = (LivingEntity) entity;
                    BotLogger.debug("üéØ –ù–∞–π–¥–µ–Ω –∏–≥—Ä–æ–∫! –ù–∞—á–∏–Ω–∞–µ–º —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ.");
                    return;
                }
            }
        }

        BotLogger.debug("‚ùå –ù–∏ –æ–¥–Ω–æ–≥–æ –º–æ–±–∞ –∏–ª–∏ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
    }
}
