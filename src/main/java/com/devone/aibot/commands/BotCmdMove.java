package com.devone.aibot.commands;

import com.devone.aibot.core.Bot;
import com.devone.aibot.core.BotManager;
import com.devone.aibot.core.logic.tasks.BotTaskMove;
import com.devone.aibot.utils.BotLogger;
import com.devone.aibot.utils.BotStringUtils;

import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

public class BotCmdMove implements CommandExecutor {

    private final BotManager botManager;

    public BotCmdMove(BotManager botManager) {
        this.botManager = botManager;
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("¬ßcOnly players can use this command.");
            return true;
        }

        Player player = (Player) sender;
        Bot bot = botManager.getOrSelectBot(player.getUniqueId());

        if (bot == null) {
            player.sendMessage("¬ßc–ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.");
            return true;
        }

        if (args.length != 3) {
            player.sendMessage("¬ßc–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /bot-move <x> <y> <z>");
            return true;
        }

        try {
            double x = Double.parseDouble(args[0]);
            double y = Double.parseDouble(args[1]);
            double z = Double.parseDouble(args[2]);

            World world = player.getWorld();
            Location targetLocation = new Location(world, x, y, z);

            BotLogger.debug("üìå /bot-move: –ë–æ—Ç " + bot.getId() + " –∏–¥–µ—Ç –∫ " + BotStringUtils.formatLocation(targetLocation));

            // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
            BotTaskMove moveTask = new BotTaskMove(bot);
            moveTask.configure(targetLocation);
            bot.addTaskToQueue(moveTask);

            player.sendMessage("¬ßa–ë–æ—Ç " + bot.getId() + " –∏–¥–µ—Ç –∫ " + BotStringUtils.formatLocation(targetLocation));

        } catch (NumberFormatException e) {
            player.sendMessage("¬ßc–û—à–∏–±–∫–∞: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏.");
        }

        return true;
    }

}
